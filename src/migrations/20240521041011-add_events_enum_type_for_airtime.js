"use strict";

/** @type {import('sequelize-cli').Migration} */
module.exports = {
    up: async (queryInterface, Sequelize) => {
        await queryInterface.changeColumn("Events", "eventType", {
            type: Sequelize.TEXT,
        });

        // Drop the existing ENUM type
        await queryInterface.sequelize.query("DROP TYPE enum_Events_eventType");
        await queryInterface.changeColumn("Events", "eventType", {
            type: Sequelize.ENUM(
                "METER_VALIDATION_FAILED",
                "METER_VALIDATION_REQUEST_SENT_TO_VENDOR",
                "METER_VALIDATION_RECIEVED_FROM_VENDOR",
                "METER_VALIDATION_SENT_PARTNER",
                "CREATE_USER_INITIATED",
                "CREATE_USER_CONFIRMED",
                "CHECK_DISCO_UP_INITIATED_TO_VENDOR",
                "CHECK_DISCO_UP_CONFIRMED_FROM_VENDOR",
                "POWER_PURCHASE_INITIATED_BY_CUSTOMER",
                "VEND_ELECTRICITY_REQUESTED_FROM_VENDOR",
                "TOKEN_RECIEVED_FROM_VENDOR",
                "TOKEN_RECIEVED_FROM_REQUERY",
                "TOKEN_REQUEST_FAILED",
                "TOKEN_REQUEST_TIMEDOUT",
                "TOKEN_REQUEST_SUCCESS_WITH_NO_TOKEN",
                "POWER_PURCHASE_INITIATED_BY_CUSTOMER_REQUERY",
                "GET_TRANSACTION_TOKEN_FROM_VENDOR_INITIATED",
                "GET_TRANSACTION_TOKEN_FROM_VENDOR_REQUERY",
                "GET_TRANSACTION_TOKEN_REQUESTED_FROM_VENDOR",
                "TOKEN_SENT_TO_PARTNER",
                "TOKEN_SENT_TO_PARTNER_RETRY",
                "TOKEN_SENT_TO_EMAIL",
                "TOKEN_SENT_TO_NUMBER",
                "SMS_TOKEN_SENT_TO_USER",
                "PARTNER_TRANSACTION_COMPLETE",
                "WEBHOOK_NOTIFICATION_SENT_TO_PARTNER",
                "WEBHOOK_NOTIFICATION_CONFIRMED_FROM_PARTNER",
                "WEBHOOK_NOTIFICATION_TO_PARTNER_RETRY",
                "RETRY_PURCHASE_FROM_VENDOR",
                "RETRY_PURCHASE_FROM_NEW_VENDOR",
                "PHONENUMBER_VALIDATION_REQUESTED_FROM_PARTNER",
                "PHONENUMBER_VALIDATION_SUCCESS",
                "PHONENUMBER_VALIDATION_SENT_TO_PARTNER",
                "AIRTIME_PURCHASE_INITIATED_BY_CUSTOMER",
                "AIRTIME_TRANSACTION_REQUERY",
                "AIRTIME_TRANSACTION_REQUERY_INITIATED",
                "VEND_AIRTIME_REQUESTED_FROM_VENDOR",
                "GET_AIRTIME_FROM_VENDOR_INITIATED",
                "AIRTIME_RECEIVED_FROM_VENDOR",
                "AIRTIME_RECEIVED_FROM_VENDOR_REQUERY",
                "AIRTIME_WEBHOOK_NOTIFICATION_SENT_TO_PARTNER",
                "AIRTIME_WEBHOOK_NOTIFICATION_CONFIRMED_FROM_PARTNER",
                "AIRTIME_WEBHOOK_NOTIFICATION_TO_PARTNER_RETRY",
                "AIRTIME_TRANSACTION_COMPLETE",
                "GET_AIRTIME_FROM_VENDOR_REQUERY",
                "RETRY_AIRTIME_PURCHASE_FROM_NEW_VENDOR",
                "RETRY_AIRTIME_PURCHASE_FROM_VENDOR",
                "REQUEST_TIMEDOUT",
                "AIRTIME_PURCHASE_RETRY_FROM_NEW_VENDOR",
                "AIRTIME_SENT_TO_PARTNER",
                "AIRTIME_SENT_TO_USER_EMAIL",
                "DATA_PURCHASE_INITIATED_BY_CUSTOMER",
                "DATA_TRANSACTION_REQUERY",
                "DATA_TRANSACTION_REQUERY_INITIATED",
                "VEND_DATA_REQUESTED_FROM_VENDOR",
                "GET_DATA_FROM_VENDOR_INITIATED",
                "DATA_RECEIVED_FROM_VENDOR",
                "DATA_WEBHOOK_NOTIFICATION_SENT_TO_PARTNER",
                "DATA_WEBHOOK_NOTIFICATION_CONFIRMED_FROM_PARTNER",
                "DATA_WEBHOOK_NOTIFICATION_TO_PARTNER_RETRY",
                "DATA_TRANSACTION_COMPLETE",
                "GET_DATA_FROM_VENDOR_RETRY",
                "RETRY_DATA_PURCHASE_FROM_NEW_VENDOR",
                "DATA_PURCHASE_RETRY_FROM_NEW_VENDOR",
                "DATA_SENT_TO_PARTNER",
                "DATA_SENT_TO_USER_EMAIL",
                "SCHEDULE_REQUERY_FOR_TRANSACTION",
                "SCHEDULE_REQUERY_FOR_AIRTIME_TRANSACTION",
                "SCHEDULE_RETRY_FOR_TRANSACTION",
                "SCHEDULE_REQUERY_FOR_TRANSACTION_INITIATED",
                "SCHEDULE_RETRY_FOR_AIRTIME_TRANSACTION",
                "GET_DATA_FROM_VENDOR_REQUERY",
                "SCHEDULE_REQUERY_FOR_DATA_TRANSACTION",
                "SCHEDULE_RETRY_FOR_DATA_TRANSACTION",
            ),
            allowNull: false,
        });
    },

    down: async (queryInterface, Sequelize) => {
        // Temporarily change the column type to TEXT
        await queryInterface.changeColumn("Events", "eventType", {
            type: Sequelize.TEXT,
        });

        // Drop the ENUM type
        await queryInterface.sequelize.query(
            'DROP TYPE "enum_Events_eventType";',
        );
        // List all enum values except the new ones for down migration if necessary

        await queryInterface.changeColumn("Events", "eventType", {
            type: Sequelize.ENUM(
                "METER_VALIDATION_FAILED",
                "METER_VALIDATION_REQUEST_SENT_TO_VENDOR",
                "METER_VALIDATION_RECIEVED_FROM_VENDOR",
                "METER_VALIDATION_SENT_PARTNER",
                "CREATE_USER_INITIATED",
                "CREATE_USER_CONFIRMED",
                "CHECK_DISCO_UP_INITIATED_TO_VENDOR",
                "CHECK_DISCO_UP_CONFIRMED_FROM_VENDOR",
                "POWER_PURCHASE_INITIATED_BY_CUSTOMER",
                "VEND_ELECTRICITY_REQUESTED_FROM_VENDOR",
                "TOKEN_RECIEVED_FROM_VENDOR",
                "TOKEN_RECIEVED_FROM_REQUERY",
                "TOKEN_REQUEST_FAILED",
                "TOKEN_REQUEST_TIMEDOUT",
                "TOKEN_REQUEST_SUCCESS_WITH_NO_TOKEN",
                "POWER_PURCHASE_INITIATED_BY_CUSTOMER_REQUERY",
                "GET_TRANSACTION_TOKEN_FROM_VENDOR_INITIATED",
                "GET_TRANSACTION_TOKEN_FROM_VENDOR_REQUERY",
                "GET_TRANSACTION_TOKEN_REQUESTED_FROM_VENDOR",
                "TOKEN_SENT_TO_PARTNER",
                "TOKEN_SENT_TO_PARTNER_RETRY",
                "TOKEN_SENT_TO_EMAIL",
                "TOKEN_SENT_TO_NUMBER",
                "SMS_TOKEN_SENT_TO_USER",
                "PARTNER_TRANSACTION_COMPLETE",
                "WEBHOOK_NOTIFICATION_SENT_TO_PARTNER",
                "WEBHOOK_NOTIFICATION_CONFIRMED_FROM_PARTNER",
                "WEBHOOK_NOTIFICATION_TO_PARTNER_RETRY",
                "RETRY_PURCHASE_FROM_VENDOR",
                "RETRY_PURCHASE_FROM_NEW_VENDOR",
                "PHONENUMBER_VALIDATION_REQUESTED_FROM_PARTNER",
                "PHONENUMBER_VALIDATION_SUCCESS",
                "PHONENUMBER_VALIDATION_SENT_TO_PARTNER",
                "AIRTIME_PURCHASE_INITIATED_BY_CUSTOMER",
                "AIRTIME_TRANSACTION_REQUERY",
                "AIRTIME_TRANSACTION_REQUERY_INITIATED",
                "VEND_AIRTIME_REQUESTED_FROM_VENDOR",
                "GET_AIRTIME_FROM_VENDOR_INITIATED",
                "AIRTIME_RECEIVED_FROM_VENDOR",
                "AIRTIME_RECEIVED_FROM_VENDOR_REQUERY",
                "AIRTIME_WEBHOOK_NOTIFICATION_SENT_TO_PARTNER",
                "AIRTIME_WEBHOOK_NOTIFICATION_CONFIRMED_FROM_PARTNER",
                "AIRTIME_WEBHOOK_NOTIFICATION_TO_PARTNER_RETRY",
                "AIRTIME_TRANSACTION_COMPLETE",
                "GET_AIRTIME_FROM_VENDOR_REQUERY",
                "RETRY_AIRTIME_PURCHASE_FROM_NEW_VENDOR",
                "RETRY_AIRTIME_PURCHASE_FROM_VENDOR",
                "REQUEST_TIMEDOUT",
                "AIRTIME_PURCHASE_RETRY_FROM_NEW_VENDOR",
                "AIRTIME_SENT_TO_PARTNER",
                "AIRTIME_SENT_TO_USER_EMAIL",
                "DATA_PURCHASE_INITIATED_BY_CUSTOMER",
                "DATA_TRANSACTION_REQUERY",
                "DATA_TRANSACTION_REQUERY_INITIATED",
                "VEND_DATA_REQUESTED_FROM_VENDOR",
                "GET_DATA_FROM_VENDOR_INITIATED",
                "DATA_RECEIVED_FROM_VENDOR",
                "DATA_WEBHOOK_NOTIFICATION_SENT_TO_PARTNER",
                "DATA_WEBHOOK_NOTIFICATION_CONFIRMED_FROM_PARTNER",
                "DATA_WEBHOOK_NOTIFICATION_TO_PARTNER_RETRY",
                "DATA_TRANSACTION_COMPLETE",
                "GET_DATA_FROM_VENDOR_RETRY",
                "RETRY_DATA_PURCHASE_FROM_NEW_VENDOR",
                "DATA_PURCHASE_RETRY_FROM_NEW_VENDOR",
                "DATA_SENT_TO_PARTNER",
                "DATA_SENT_TO_USER_EMAIL",
                "SCHEDULE_REQUERY_FOR_TRANSACTION",
                "SCHEDULE_REQUERY_FOR_AIRTIME_TRANSACTION",
                "SCHEDULE_RETRY_FOR_TRANSACTION",
                "SCHEDULE_REQUERY_FOR_TRANSACTION_INITIATED",
                "SCHEDULE_RETRY_FOR_AIRTIME_TRANSACTION",
                "GET_DATA_FROM_VENDOR_REQUERY",
                "SCHEDULE_REQUERY_FOR_DATA_TRANSACTION",
                "SCHEDULE_RETRY_FOR_DATA_TRANSACTION",
            ),
            allowNull: false,
        });
    },
};
